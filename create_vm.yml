---
- name: Create IBM Cloud VPC VSI
  hosts: localhost

  tasks:
    - name: get resource groud id
      ibm.cloudcollection.ibm_resource_group_info:
        name: "{{ resource_group }}"
      register: resource_group_info

    - name: get ssh key id
      ibm.cloudcollection.ibm_is_ssh_key_info:
        name: "{{ ssh_public_key }}"
      register: ssh_info

    - name: get vpc id
      ibm.cloudcollection.ibm_is_vpc_info:
        name: "{{ vpc }}"
      register: vpc_info

    - name: get subnet id
      ibm.cloudcollection.ibm_is_subnet_info:
        name: "{{ subnet }}"
      register: subnet_info

    - name: Configure VSI
      ibm.cloudcollection.ibm_is_instance:
        resource_group: "{{ resource_group_info.resource.id }}"
        name: "{{ name_prefix }}-vsi"
        state: available
        vpc: "{{ vpc_info.resource.id }}"
        profile: "{{ vsi_profile }}"
        image: "{{ vsi_image | default('r018-12dc96ee-0e85-4bef-bed6-a9d0bdc57cc5')  }}"
        keys:
          - "{{ ssh_info.resource.id }}"
        primary_network_interface:
          - subnet: "{{ subnet_info.resource.id }}"
        zone: "{{ zone }}"
        region: "{{ region }}"
      register: vsi

    - name: Configure Floating IP Address
      ibm.cloudcollection.ibm_is_floating_ip:
        resource_group: "{{ resource_group_info.resource.id }}"
        name: "{{ name_prefix }}-fip"
        state: available
        target: "{{ vsi.resource.primary_network_interface[0]['id'] }}"
      register: fip

    - name: Create tower inventory
      awx.awx.tower_inventory:
        name: "IBM Cloud"
        description: "VSIs"
        organization: "Default"
        state: present
        validate_certs: no

    - name: Add tower host
      awx.awx.tower_host:
        name: "{{ name_prefix }}-vsi"
        inventory: "IBM Cloud"
        state: present
        validate_certs: no
        variables:
           ansible_host: "{{Â fip.resource.address }}"


